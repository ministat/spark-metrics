accumulatorUpdates|attemptId|description|details|diskBytesSpilled|executorBlockTime|executorCpuTime|executorRunTime|executorWaitTime|firstTaskLaunchedTime|inputBytes|inputRecords|killedTasksSummary.Finish but did not commit due to another attempt succeeded|killedTasksSummary.another attempt succeeded|memoryBytesSpilled|name|numActiveTasks|numCompleteTasks|numCompletedIndices|numFailedTasks|numKilledTasks|numTasks|outputBytes|outputRecords|rddIds|schedulingPool|shuffleReadBytes|shuffleReadRecords|shuffleWriteBytes|shuffleWriteRecords|stageId|status|submissionTime
[]|0|"create volatile table signifyd_po as
select src_cre_date
  ,coalesce(extrnl_rfrnc_id,trans_entity_id) as purchase_order_id
  ,get_json_object(adtnl_info_txt,'$.signifyd_decision') as signifyd_decision
   ,get_json_object(adtnl_info_txt,'$.signifyd_score') as signifyd_score
   ,trans_entity_type_id as signifyd_trans_entity_type_id
from TNS_ACCESS_VIEWS.TRISK_EVAL_HEAD 
WHERE  (trans_entity_type_id in (9,10) 
  and coalesce(extrnl_rfrnc_id,trans_entity_id) is not null 
  and get_json_object(adtnl_info_txt,'$.signifyd_case_id') is not null)  
QUALIFY ROW_NUMBER () OVER (PARTITION BY purchase_order_id ORDER BY src_cre_date DESC)=1"|"org.apache.spark.sql.hive.thriftserver.SparkExecuteStatementOperation$$anon$1$$anon$2.run(SparkExecuteStatementOperation.scala:205)
java.security.AccessController.doPrivileged(Native Method)
javax.security.auth.Subject.doAs(Subject.java:422)
org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1869)
org.apache.spark.sql.hive.thriftserver.SparkExecuteStatementOperation$$anon$1.run(SparkExecuteStatementOperation.scala:219)
java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
java.util.concurrent.FutureTask.run(FutureTask.java:266)
java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
java.lang.Thread.run(Thread.java:748)"|0|0|0|0|0|2020-07-30T08:20:22.284GMT|0|0|||0|run at AccessController.java:0|500|0|0|0|0|500|0|0|[312730, 312727, 312728, 312726, 312729]|default|0|0|0|0|137231|ACTIVE|2020-07-30T08:20:22.273GMT
[]|0|"create table if not exists p_yifan_t.fi_wallet_token 
USING PARQUET as (    

select distinct acct_id, 
case when WLLT_TYPE_DESC = 'GOOGLE_PAY' then 'GOOGLE_PAY_'||EMAIL_TXT 
WHEN  WLLT_TYPE_DESC = 'APPLE_PAY' then 'APPLE_PAY_'||EMAIL_TXT end as token_id
from DW_OMS_ORDER_PYMNT a  
left join PRS_SECURE_V.PG_SCRTCH_DGTAL_WLLT_INFO w on  cast(substr(ACCT_ID, 4) as bigint) = PG_SCRTCH_DGTAL_WLLT_ID 
where PYMNT_MTHD_TYPE_ID in (55) 

)"|"org.apache.spark.sql.hive.thriftserver.SparkExecuteStatementOperation$$anon$1$$anon$2.run(SparkExecuteStatementOperation.scala:205)
java.security.AccessController.doPrivileged(Native Method)
javax.security.auth.Subject.doAs(Subject.java:422)
org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1869)
org.apache.spark.sql.hive.thriftserver.SparkExecuteStatementOperation$$anon$1.run(SparkExecuteStatementOperation.scala:219)
java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
java.util.concurrent.FutureTask.run(FutureTask.java:266)
java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
java.lang.Thread.run(Thread.java:748)"|0|0|1655891|25715602|0|2020-07-30T08:19:51.123GMT|179735266102|15896920069|1.0|86.0|0|run at AccessController.java:0|78|3753|3753|0|87|3792|0|0|[312721, 312719, 312720]|default|0|0|25482349|276897|137228|ACTIVE|2020-07-30T08:19:51.112GMT
[]|0|"insert into P_EMBG_DASH_T.EMBG_FINAL_AGG_OC_TD
SELECT
Retail_Year ,
Retail_Week ,
Month_Beg_dt ,
RETAIL_WK_END_DATE AS Retail_Week_End_Date ,
AGE_FOR_RTL_WEEK_ID AS Retail_Week_Age,
trans_site AS Trans_Site,
CASE WHEN CBT_IND=1 THEN 'CBT' ELSE 'Domestic' END as CBT_Flag,
 CLAIM_TYPE  as Claim_Type,
SLR_SEGMENT AS  Seller_Segment,
seller_tenure AS Seller_Tenure,
  ASP_BUCKET AS ASP_Bucket,
   SELLER_STANDARD AS Seller_Standard,
   NORS_TYPE_DESC AS Seller_Activity,
   ITEM_REGION as Item_Location,
CASE WHEN fraud_ind=1 THEN 'Fraud' ELSE 'Non Fraud' END AS Fraud_Flag,
CASE WHEN ato_y_n=1 THEN 'ATO' ELSE 'Non ATO' END AS ATO_Flag,
CASE WHEN ULP_FLAG =1 THEN 'ULP' ELSE 'Non ULP' END AS ULP_Flag,
CASE WHEN P_FRAUD_FLAG=1 THEN 'Y' ELSE 'N' end as Potential_Fraud_Flag,
case when Large_loss_slr_flag=1 then 'Y' else 'N' end as Large_Loss_Seller_Flag,
pl_flag AS Promoted_Listing_Flag ,
Covid_categories as Covid19_Categories,
case when AdminEndLstg_flag = 'Y' 
and Covid_categories in ('Mask', 'Other hygiene') then 'Yes' else 'No' end as Covid19_Admin_Ended,
covid_whtlst_slr as Covid19_Whitelstd_Seller,
sum(1) Txns,
SUM( GMV ) GMV,
SUM(CASE WHEN ebg_covered='COVERED' 
		AND ELGBL_CLAIM_USD_AMT>0 THEN 1 ELSE 0 END  )Claim_Cnt,
SUM(CASE WHEN ebg_covered='COVERED'
		THEN ELGBL_CLAIM_USD_AMT ELSE 0 END )  Claim_Amt,
SUM(CASE WHEN DATEDIFF(RCNT_CPS_CLAIM_OPEN_DT,trans_dt) <= 14 
	and ebg_covered='COVERED' AND ELGBL_CLAIM_USD_AMT>0 THEN 1 ELSE 0 END )Claim_14D_Cnt,
SUM(CASE WHEN DATEDIFF(RCNT_CPS_CLAIM_OPEN_DT,trans_dt) <= 14 
	and ebg_covered='COVERED' THEN ELGBL_CLAIM_USD_AMT else 0 end  ) Claim_14D_Amt ,
SUM(CASE WHEN  DATEDIFF(RCNT_CPS_CLAIM_OPEN_DT,trans_dt) <= 30 
	and ebg_covered='COVERED' AND ELGBL_CLAIM_USD_AMT>0 THEN 1 ELSE 0 END )Claim_30D_Cnt,
SUM(CASE WHEN  DATEDIFF(RCNT_CPS_CLAIM_OPEN_DT,trans_dt) <= 30 
	and ebg_covered='COVERED' THEN ELGBL_CLAIM_USD_AMT ELSE 0 END ) Claim_30D_Amt ,
SUM(CASE WHEN  CNCL_YN_IND='N' THEN 1 END) Txns_NC,
SUM(CASE WHEN  CNCL_YN_IND='N'  THEN GMV END) GMV_NC ,
SUM(CASE WHEN  CNCL_YN_IND='N' and ebg_covered='COVERED' 
		AND ELGBL_CLAIM_USD_AMT>0 THEN 1  ELSE 0 END )Claim_Cnt_NC,
SUM(CASE WHEN  CNCL_YN_IND='N' and ebg_covered='COVERED'
		THEN ELGBL_CLAIM_USD_AMT ELSE 0 END )Claim_Amt_NC,
SUM(CASE WHEN  CNCL_YN_IND='N' AND DATEDIFF(RCNT_CPS_CLAIM_OPEN_DT,trans_dt) <= 14 
	and ebg_covered='COVERED' AND ELGBL_CLAIM_USD_AMT>0  THEN 1 ELSE 0 END )Claim_14D_Cnt_NC,
SUM(CASE WHEN  CNCL_YN_IND='N'   AND  DATEDIFF(RCNT_CPS_CLAIM_OPEN_DT,trans_dt) <= 14 
	and ebg_covered='COVERED'  THEN ELGBL_CLAIM_USD_AMT ELSE 0 END )Claim_14D_Amt_NC,
SUM(CASE WHEN  CNCL_YN_IND='N' AND DATEDIFF(RCNT_CPS_CLAIM_OPEN_DT,trans_dt) <= 30 
	and ebg_covered='COVERED' AND ELGBL_CLAIM_USD_AMT>0  THEN 1 ELSE 0 END )Claim_30D_Cnt_NC,
SUM(CASE WHEN  CNCL_YN_IND='N'   AND  DATEDIFF(RCNT_CPS_CLAIM_OPEN_DT,trans_dt) <= 30 
	and ebg_covered='COVERED'  THEN ELGBL_CLAIM_USD_AMT ELSE 0 END )Claim_30D_Amt_NC,	
SUM(CASE WHEN  PYMNT_2_0_FLAG=1 THEN 1 END) P2_Txns ,
SUM(CASE WHEN  PYMNT_2_0_FLAG=1  THEN GMV END) P2_GMV ,
SUM(CASE WHEN  PYMNT_2_0_FLAG=1 and ebg_covered='COVERED' 
		AND ELGBL_CLAIM_USD_AMT>0 THEN 1  ELSE 0 END )P2_Claim_Cnt,
SUM(CASE WHEN  PYMNT_2_0_FLAG=1 and ebg_covered='COVERED'
		THEN ELGBL_CLAIM_USD_AMT ELSE 0 END )P2_Claim_Amt,
SUM(CASE WHEN  PYMNT_2_0_FLAG=1 AND DATEDIFF(RCNT_CPS_CLAIM_OPEN_DT,trans_dt) <= 14 
	and ebg_covered='COVERED' AND ELGBL_CLAIM_USD_AMT>0  THEN 1 ELSE 0 END )P2_Claim_14D_Cnt,
SUM(CASE WHEN  PYMNT_2_0_FLAG=1   AND  DATEDIFF(RCNT_CPS_CLAIM_OPEN_DT,trans_dt) <= 14 
	and ebg_covered='COVERED'  THEN ELGBL_CLAIM_USD_AMT ELSE 0 END )P2_Claim_14D_Amt,
SUM(CASE WHEN  PYMNT_2_0_FLAG=1 AND DATEDIFF(RCNT_CPS_CLAIM_OPEN_DT,trans_dt) <= 30 
	and ebg_covered='COVERED' AND ELGBL_CLAIM_USD_AMT>0  THEN 1 ELSE 0 END )P2_Claim_30D_Cnt,
SUM(CASE WHEN  PYMNT_2_0_FLAG=1   AND  DATEDIFF(RCNT_CPS_CLAIM_OPEN_DT,trans_dt) <= 30 
	and ebg_covered='COVERED'  THEN ELGBL_CLAIM_USD_AMT ELSE 0 END )P2_Claim_30D_Amt,
SUM(CASE WHEN  PYMNT_2_0_FLAG=0 THEN 1 END) P1_Txns ,
SUM(CASE WHEN  PYMNT_2_0_FLAG=0  THEN GMV END) P1_GMV ,
SUM(CASE WHEN  PYMNT_2_0_FLAG=0 and ebg_covered='COVERED' 
		AND ELGBL_CLAIM_USD_AMT>0 THEN 1  ELSE 0 END )P1_Claim_Cnt,
SUM(CASE WHEN  PYMNT_2_0_FLAG=0 and ebg_covered='COVERED'
		THEN ELGBL_CLAIM_USD_AMT ELSE 0 END )P1_Claim_Amt,
SUM(CASE WHEN  PYMNT_2_0_FLAG=0 AND DATEDIFF(RCNT_CPS_CLAIM_OPEN_DT,trans_dt) <= 14 
	and ebg_covered='COVERED' AND ELGBL_CLAIM_USD_AMT>0  THEN 1 ELSE 0 END )P1_Claim_14D_Cnt,
SUM(CASE WHEN  PYMNT_2_0_FLAG=0   AND  DATEDIFF(RCNT_CPS_CLAIM_OPEN_DT,trans_dt) <= 14 
	and ebg_covered='COVERED'  THEN ELGBL_CLAIM_USD_AMT ELSE 0 END )P1_Claim_14D_Amt,
SUM(CASE WHEN  PYMNT_2_0_FLAG=0 AND DATEDIFF(RCNT_CPS_CLAIM_OPEN_DT,trans_dt) <= 30 
	and ebg_covered='COVERED' AND ELGBL_CLAIM_USD_AMT>0  THEN 1 ELSE 0 END )P1_Claim_30D_Cnt,
SUM(CASE WHEN  PYMNT_2_0_FLAG=0   AND  DATEDIFF(RCNT_CPS_CLAIM_OPEN_DT,trans_dt) <= 30 
	and ebg_covered='COVERED'  THEN ELGBL_CLAIM_USD_AMT ELSE 0 END )P1_Claim_30D_Amt
	FROM P_EMBG_HDM_T.EMBG_FINAL_TABLE A
JOIN access_views.DW_CAL_DT DT
ON a.trans_dt = DT.CAL_DT
WHERE 
 DT.AGE_FOR_RTL_WEEK_ID NOT IN (0,-1,-2)
 and DT.AGE_FOR_RTL_WEEK_ID<0
  and program='EBG'
  and Month_Beg_dt >= add_months(date_sub(current_date(), (DAY(CURRENT_DATE) - 1)),-6)
GROUP BY 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23"|"org.apache.spark.sql.hive.thriftserver.SparkExecuteStatementOperation$$anon$1$$anon$2.run(SparkExecuteStatementOperation.scala:205)
java.security.AccessController.doPrivileged(Native Method)
javax.security.auth.Subject.doAs(Subject.java:422)
org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1869)
org.apache.spark.sql.hive.thriftserver.SparkExecuteStatementOperation$$anon$1.run(SparkExecuteStatementOperation.scala:219)
java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
java.util.concurrent.FutureTask.run(FutureTask.java:266)
java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
java.lang.Thread.run(Thread.java:748)"|0|0|33773397|34570917|0|2020-07-30T08:18:53.046GMT|0|0|||0|run at AccessController.java:0|50|1015|1015|0|0|1040|0|0|[312694, 312689, 312692, 312688, 312693, 312690, 312691]|default|87217225556|1642764563|6336543530|21274763|137215|ACTIVE|2020-07-30T08:18:52.923GMT
